apply plugin: 'com.android.application'

android {
    signingConfigs {
        release {
            keyAlias 'GiantGames'
            keyPassword 'GiantGames2017'
            storeFile file('release.jks')
            storePassword 'GiantGames2017'
        }
    }
    compileSdkVersion 25
    buildToolsVersion '26.0.2'
    defaultConfig {
        applicationId "com.learnwithme.buildapps.giantbomb"
        minSdkVersion 21
        //noinspection OldTargetApi
        targetSdkVersion 25
        versionCode 1001
        versionName "1.0.1"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        signingConfig signingConfigs.release
    }
    buildTypes {
        release {
            signingConfig signingConfigs.release
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    buildTypes.each {
        it.buildConfigField 'String', 'GIANT_BOMB_API_KEY', "\"1b0716461d480f008c2c740ef796ed605c435a52\""
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {

    // App
    final SUPPORT_LIBRARY_VERSION = "25.4.0"
    final RX_ANDROID_VERSION = "2.0.1"
    final RX_JAVA_VERSION = "2.1.1"
    final RX_RELAY_VERSION = "2.0.0"
    final DAGGER_VERSION = "2.11"
    final RETROFIT_VERSION = "2.3.0"
    final OKHTTP_VERSION = "3.8.1"
    final GSON_VERSION = "2.8.1"
    final AUTO_VALUE_VERSION = "1.4"
    final AUTO_VALUE_GSON_VERSION = "0.4.6"
    final BUTTER_KNIFE_VERSION = "8.7.0"
    final GLIDE_VERSION = "3.8.0"
    final SHOWCASE_VIEW_VERSION = "5.4.3"
    final MATERIAL_VALUES_VERSION = "1.1.1"
    final STETHO_VERSION = "1.5.0"
    final TIMBER_VERSION = "4.5.1"
    final LEAK_CANARY_VERSION = "1.5.1"
    final ANDROID_STATE_VERSION = "1.1.1"
    final MOSBY_VERSION = "3.0.4"
    final FRAGMENTARGS_VERSION = "3.0.2"
    final MATERIAL_DATE_PICKER_VERSION = "3.2.2"
    final MATERIAL_SEARCH_VIEW_VERSION = "1.4.0"
    final JSOUP_VERSION = "1.10.3"
    final FIREBASE_VERSION = "11.6.0"

    // Testing
    final ESPRESSO_VERSION = "2.2.2"
    final JUNIT_VERSION = "4.12"
    final MOCKITO_VERSION = "2.8.47"
    final RUNNER_VERSION = "0.4"
    def daggerCompiler = "com.google.dagger:dagger-compiler:$DAGGER_VERSION"
    def junit = "junit:junit:${JUNIT_VERSION}"
    def mockito = "org.mockito:mockito-core:${MOCKITO_VERSION}"
    def mockitoAndroid = "org.mockito:mockito-android:${MOCKITO_VERSION}"

    // Android libs
    compile "com.android.support:appcompat-v7:${SUPPORT_LIBRARY_VERSION}"
    compile "com.android.support:design:${SUPPORT_LIBRARY_VERSION}"
    compile "com.android.support:cardview-v7:${SUPPORT_LIBRARY_VERSION}"
    compile "com.android.support:preference-v14:${SUPPORT_LIBRARY_VERSION}"
    compile 'com.android.support.constraint:constraint-layout:1.0.2'

    // Firebase - Analytics
    compile "com.google.firebase:firebase-core:${FIREBASE_VERSION}"

    // Firebase - Crash Reporting
    compile "com.google.firebase:firebase-crash:${FIREBASE_VERSION}"

    // App dependencies
    compile "io.reactivex.rxjava2:rxandroid:${RX_ANDROID_VERSION}"
    compile "io.reactivex.rxjava2:rxjava:${RX_JAVA_VERSION}"
    compile "com.jakewharton.rxrelay2:rxrelay:${RX_RELAY_VERSION}"
    compile "com.google.dagger:dagger:${DAGGER_VERSION}"
    compile "com.squareup.retrofit2:retrofit:${RETROFIT_VERSION}"
    compile "com.squareup.retrofit2:converter-gson:${RETROFIT_VERSION}"
    compile "com.squareup.retrofit2:adapter-rxjava2:${RETROFIT_VERSION}"
    compile "com.squareup.okhttp3:okhttp:${OKHTTP_VERSION}"
    compile "com.google.code.gson:gson:${GSON_VERSION}"
    compile "com.jakewharton:butterknife:${BUTTER_KNIFE_VERSION}"
    compile "com.github.bumptech.glide:glide:${GLIDE_VERSION}"
    compile "com.github.amlcurran.showcaseview:library:${SHOWCASE_VIEW_VERSION}"
    compile "blue.aodev:material-values:${MATERIAL_VALUES_VERSION}"
    compile "com.evernote:android-state:${ANDROID_STATE_VERSION}"
    compile "com.hannesdorfmann.mosby3:viewstate:${MOSBY_VERSION}"
    compile "com.hannesdorfmann.mosby3:mvp-lce:${MOSBY_VERSION}"
    compile "com.hannesdorfmann.fragmentargs:annotation:${FRAGMENTARGS_VERSION}"
    compile "com.wdullaer:materialdatetimepicker:${MATERIAL_DATE_PICKER_VERSION}"
    compile "com.miguelcatalan:materialsearchview:${MATERIAL_SEARCH_VIEW_VERSION}"
    compile "org.jsoup:jsoup:${JSOUP_VERSION}"
    compile "com.google.auto.value:auto-value:${AUTO_VALUE_VERSION}"
    provided "com.jakewharton.auto.value:auto-value-annotations:${AUTO_VALUE_VERSION}"
    provided "com.ryanharter.auto.value:auto-value-gson:${AUTO_VALUE_GSON_VERSION}"
    annotationProcessor "com.google.auto.value:auto-value:${AUTO_VALUE_VERSION}"
    annotationProcessor "com.ryanharter.auto.value:auto-value-gson:${AUTO_VALUE_GSON_VERSION}"
    annotationProcessor "com.jakewharton:butterknife-compiler:${BUTTER_KNIFE_VERSION}"
    annotationProcessor "com.evernote:android-state-processor:${ANDROID_STATE_VERSION}"
    annotationProcessor "com.hannesdorfmann.fragmentargs:processor:${FRAGMENTARGS_VERSION}"
    annotationProcessor daggerCompiler
    testAnnotationProcessor daggerCompiler
    androidTestAnnotationProcessor daggerCompiler

    // Instrumentation tests dependencies
    androidTestCompile junit
    androidTestCompile mockito
    androidTestCompile mockitoAndroid
    androidTestCompile "com.android.support:support-annotations:${SUPPORT_LIBRARY_VERSION}"
    androidTestCompile "com.android.support.test.espresso:espresso-core:${ESPRESSO_VERSION}"
    androidTestCompile "com.android.support.test:runner:${RUNNER_VERSION}"
    androidTestCompile "com.android.support.test:rules:${RUNNER_VERSION}"

    // Unit tests dependencies
    testCompile junit
    testCompile mockito

    // Debugging tools dependencies
    compile "com.facebook.stetho:stetho:${STETHO_VERSION}"
    compile "com.facebook.stetho:stetho-okhttp3:${STETHO_VERSION}"
    compile "com.jakewharton.timber:timber:${TIMBER_VERSION}"
    debugCompile "com.squareup.leakcanary:leakcanary-android:${LEAK_CANARY_VERSION}"
    releaseCompile "com.squareup.leakcanary:leakcanary-android-no-op:${LEAK_CANARY_VERSION}"
    testCompile "com.squareup.leakcanary:leakcanary-android-no-op:${LEAK_CANARY_VERSION}"
}

apply plugin: 'com.google.gms.google-services'